import React from 'react'
import { Form } from 'antd'
import {FormContext} from './AtiForm'
import PropTypes from 'prop-types'
import 'antd/dist/antd.css'

class AtiFormItem extends React.Component {
    static propTypes = {
      /**
         * Used with label, whether to display : after label text.
         */
      colon: PropTypes.bool,
      /**
         * The extra prompt message. It is similar to help. Usage example: to display error message and prompt message at the same time.
         */
      extra: PropTypes.string,
      /**
         * Used with validateStatus, this option specifies the validation status icon. Recommended to be used only with Input.
         */
      hasFeedback: PropTypes.bool,
      /**
         * The prompt message. If not provided, the prompt message will be generated by the validation rule.
         */
      help: PropTypes.string,
      /**
         * Label text
         */
      label: PropTypes.string,
      /**
         * The layout of label. You can set span offset to something like {span: 3, offset: 12} or sm: {span: 3, offset: 12} same as with <Col>
         */
      labelCol: PropTypes.object,
      /**
         * Whether provided or not, it will be generated by the validation rule.
         */
      required: PropTypes.bool,
      /**
         * The validation status. If not provided, it will be generated by validation rule. options: 'success' 'warning' 'error' 'validating'
         */
      validateStatus: PropTypes.string,
      /**
         * The layout for input controls, same as labelCol
         */
      wrapperCol: PropTypes.object,
      id: PropTypes.string,
      config: PropTypes.object,
      children: PropTypes.element
    }

    render() {
      const {colon, extra, hasFeedback, help, label, labelCol, required, validateStatus,
        wrapperCol} = this.props
      return (
        <React.Fragment>
          <FormContext.Consumer>
            {(context) => {
              // console.log(this.props.config)
              return (
                <Form.Item
                  colon={colon} extra={extra} hasFeedback={hasFeedback} help={help} label={label}
                  labelCol={labelCol} required={required} validateStatus={validateStatus}
                  wrapperCol={wrapperCol}
                >
                  {context.decorator
                    ? context.decorator(this.props.id, this.props.config)(
                      <div>
                        {this.props.children}
                      </div>
                    )
                    : <div>
                      {this.props.children}
                    </div>
                  }
                  {/* {context.decorator(this.props.id, this.props.config)(
                            <div>
                                {this.props.children}
                            </div>
                        )}   */}
                </Form.Item>
              )
            }}

          </FormContext.Consumer>
        </React.Fragment>
      )
    }
}

export default AtiFormItem
